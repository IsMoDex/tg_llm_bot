import asyncio
from aiogram import Bot, Dispatcher
from config import TELEGRAM_BOT_TOKEN
from handlers import register_handlers
from utils.logger import logger  # –ü–æ–¥–∫–ª—é—á–∞–µ–º –ª–æ–≥–≥–µ—Ä
import sys
import traceback


async def main():
    try:
        bot = Bot(token=TELEGRAM_BOT_TOKEN)
        dp = Dispatcher()
        register_handlers(dp)

        logger.info("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ.")
        await dp.start_polling(bot)

    except Exception as e:
        logger.critical("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞:", exc_info=True)
        print("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞. –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ –ª–æ–≥–∞—Ö.")
        # –ú–æ–∂–Ω–æ —Ç–∞–∫–∂–µ –≤—ã–≤–æ–¥–∏—Ç—å –≤ –∫–æ–Ω—Å–æ–ª—å —Ç—Ä–∞—Å—Å–∏—Ä–æ–≤–∫—É, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ:
        traceback.print_exc()


if __name__ == "__main__":
    try:
        asyncio.run(main())
    except (KeyboardInterrupt, SystemExit):
        logger.warning("üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
        sys.exit()
    except Exception as e:
        logger.critical("üî• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤–Ω–µ main():", exc_info=True)
        sys.exit(1)
